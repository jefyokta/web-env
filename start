#!/usr/bin/env php
<?php

declare(ticks=1);

require_once __DIR__ . "/vendor/autoload.php";

$config = require __DIR__ . "/config/app.php";

function startServer($config)
{
    /**
     * @var \Oktaax\Oktaax
     */
    $app = require __DIR__ . "/app/ServerProvider.php";
    $app->listen($config['app']['port'], $config['app']['host'], function ($url) {
        echo "Listening at {$url}\n";
    });
}




if ($config['app']['dev']) {
    $watcher = FFI::cdef(file_get_contents(__DIR__ . "/c/fileWatcher.h"), __DIR__ . "/libfileWatcher.so");
    $watcher->watchDir(__DIR__ . "/app/");
    $pidServer = pcntl_fork();

    if ($pidServer == -1) {
        die("Failed to fork\n");
    } elseif ($pidServer == 0) {
        startServer($config);
        exit(0);
    } else {
        while (true) {
            $changed = $watcher->waitForChanges(1000);
            if ($changed > 0) {
                echo "\033[33mFile changed, restarting server...\033[0m\n";
                posix_kill($pidServer, SIGTERM);
                pcntl_waitpid($pidServer, $status);

                $pidServer = pcntl_fork();
                if ($pidServer == 0) {
                    startServer($config);
                    exit(0);
                }
            }
            usleep(200_000);
        }
    }
} else {
    startServer($config);
}
